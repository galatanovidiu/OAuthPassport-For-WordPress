<?xml version="1.0"?>
<ruleset name="OAuth Passport">
    <description>WordPress coding standards with PSR-12 for namespaced code (PHP 8.1+)</description>

    <!-- What to scan -->
    <file>.</file>

    <!-- Exclude patterns -->
    <exclude-pattern>*/vendor/*</exclude-pattern>
    <exclude-pattern>*/node_modules/*</exclude-pattern>
    <exclude-pattern>*/tests/*</exclude-pattern>
    <exclude-pattern>*/build/*</exclude-pattern>
    <exclude-pattern>*/dist/*</exclude-pattern>
    <exclude-pattern>*/assets/*</exclude-pattern>
    <exclude-pattern>*/languages/*</exclude-pattern>
    <exclude-pattern>*.min.js</exclude-pattern>
    <exclude-pattern>*.min.css</exclude-pattern>

    <!-- Base WordPress coding standards -->
    <rule ref="WordPress">
        <!-- Exclude rules that conflict with modern PHP practices -->
        <exclude name="WordPress.Files.FileName.InvalidClassFileName"/>
        <exclude name="WordPress.Files.FileName.NotHyphenatedLowercase"/>
        <exclude name="WordPress.NamingConventions.ValidVariableName.VariableNotSnakeCase"/>
        <exclude name="WordPress.NamingConventions.ValidFunctionName.MethodNameInvalid"/>
        <exclude name="WordPress.Arrays.MultipleStatementAlignment.DoubleArrowNotAligned"/>
        <exclude name="WordPress.PHP.YodaConditions.NotYoda"/>
        <exclude name="WordPress.WhiteSpace.ControlStructureSpacing.NoSpaceAfterOpenParenthesis"/>
        <exclude name="WordPress.WhiteSpace.ControlStructureSpacing.NoSpaceBeforeCloseParenthesis"/>
        <exclude name="Squiz.Commenting.FunctionComment.MissingParamComment"/>
        <exclude name="Squiz.Commenting.FileComment.Missing"/>
        <exclude name="Squiz.Commenting.ClassComment.Missing"/>
        <exclude name="Squiz.Commenting.VariableComment.Missing"/>
        <exclude name="Generic.Commenting.DocComment.MissingShort"/>
    </rule>

    <!-- PHP compatibility -->
    <rule ref="PHPCompatibility"/>
    <config name="testVersion" value="8.1-"/>

    <!-- Modern PHP standards for namespaced code -->
    <rule ref="PSR12">
        <include-pattern>*/includes/*</include-pattern>
        <include-pattern>*/src/*</include-pattern>
        <!-- Exclude WordPress-specific files from PSR-12 -->
        <exclude-pattern>**/oauth-passport.php</exclude-pattern>
    </rule>

    <!-- Allow modern PHP features -->

    <!-- Enforce strict types declaration -->
    <rule ref="Generic.PHP.RequireStrictTypes"/>

    <!-- Allow dots and underscores in hook names -->
    <rule ref="WordPress.NamingConventions.ValidHookName">
        <properties>
            <property name="additionalWordDelimiters" value="._"/>
        </properties>
    </rule>

    <!-- Prefix enforcement for global scope only -->
    <rule ref="WordPress.NamingConventions.PrefixAllGlobals">
        <properties>
            <property name="prefixes" type="array">
                <element value="oauth_passport"/>
                <element value="OAuthPassport"/>
                <element value="OAUTH_PASSPORT"/>
            </property>
        </properties>
        <!-- Only apply to main plugin file and non-namespaced code -->
        <include-pattern>**/oauth-passport.php</include-pattern>
        <exclude-pattern>*/includes/*</exclude-pattern>
        <exclude-pattern>*/src/*</exclude-pattern>
    </rule>

    <!-- Modern line length limits -->
    <rule ref="Generic.Files.LineLength">
        <properties>
            <property name="lineLimit" value="120"/>
            <property name="absoluteLineLimit" value="150"/>
        </properties>
        <!-- Be more lenient with long URLs and complex array definitions -->
        <exclude name="Generic.Files.LineLength.TooLong"/>
    </rule>

    <!-- Allow short array syntax -->
    <rule ref="Generic.Arrays.DisallowLongArraySyntax"/>

    <!-- Enforce modern array syntax -->
    <rule ref="WordPress.Arrays.ArrayDeclarationSpacing"/>

    <!-- Allow null coalescing and other modern operators -->

    <!-- Modern function and method naming for namespaced code -->
    <rule ref="PSR1.Methods.CamelCapsMethodName">
        <include-pattern>*/includes/*</include-pattern>
        <include-pattern>*/src/*</include-pattern>
    </rule>

    <!-- Allow modern visibility modifiers -->
    <rule ref="PSR2.Classes.PropertyDeclaration"/>
    <rule ref="PSR2.Methods.MethodDeclaration"/>

    <!-- Enforce proper namespace usage -->
    <rule ref="PSR1.Classes.ClassDeclaration"/>

    <!-- Allow modern exception handling -->
    <rule ref="WordPress.Security.EscapeOutput">
        <!-- Don't require escaping in exception messages -->
        <exclude name="WordPress.Security.EscapeOutput.ExceptionNotEscaped"/>
    </rule>

    <!-- Modern WordPress hooks -->
    <rule ref="WordPress.WP.I18n">
        <properties>
            <property name="text_domain" type="array">
                <element value="oauth-passport"/>
            </property>
        </properties>
    </rule>

    <!-- Allow modern WordPress features -->
    <rule ref="WordPress.WP.CapitalPDangit">
        <severity>0</severity>
    </rule>

    <!-- Reasonable complexity limits -->
    <rule ref="Generic.Metrics.CyclomaticComplexity">
        <properties>
            <property name="complexity" value="10"/>
            <property name="absoluteComplexity" value="15"/>
        </properties>
    </rule>

    <rule ref="Generic.Metrics.NestingLevel">
        <properties>
            <property name="nestingLevel" value="5"/>
            <property name="absoluteNestingLevel" value="8"/>
        </properties>
    </rule>

    <!-- Modern documentation standards -->
    <rule ref="Squiz.Commenting.FunctionComment">
        <exclude name="Squiz.Commenting.FunctionComment.MissingParamTag"/>
        <exclude name="Squiz.Commenting.FunctionComment.ParamCommentFullStop"/>
        <exclude name="Squiz.Commenting.FunctionComment.SpacingAfterParamType"/>
    </rule>

    <!-- Allow modern WordPress coding patterns -->
    <rule ref="WordPress.Security.ValidatedSanitizedInput">
        <!-- Allow modern input handling in OAuth context -->
        <exclude name="WordPress.Security.ValidatedSanitizedInput.InputNotSanitized"/>
        <exclude name="WordPress.Security.ValidatedSanitizedInput.MissingUnslash"/>
    </rule>
</ruleset>
